#include "player.hpp"
#include "input_manager.hpp"
#include <SFML/Window/Keyboard.hpp>

Player::Player()
    : idleAnimation(0, 32, 32, 4, 0.15f),
      walkRightAnimation(1, 32, 32, 4, 0.1f),
      walkLeftAnimation(2, 32, 32, 4, 0.1f),
      walkUpAnimation(3, 32, 32, 4, 0.1f),
      walkDownAnimation(4, 32, 32, 4, 0.1f),
      currentAnimation(&idleAnimation) {

    sprite.setTexture(TextureManager::getTexture("assets/player_spritesheet.png"));
    currentAnimation->applyToSprite(sprite);
    sprite.setPosition(position);
}

void Player::update(sf::Time deltaTime) {
    // Update player position, animations, etc.
    currentAnimation->update(deltaTime);
    currentAnimation->applyToSprite(sprite);
}

void Player::handleInput(const InputManager& input, sf::Time deltaTime) {
    if (input.isKeyPressed(sf::Keyboard::W)) {
        position.y -= 100 * deltaTime.asSeconds();
        currentAnimation = &walkUpAnimation;
    } else if (input.isKeyPressed(sf::Keyboard::S)) {
        position.y += 100 * deltaTime.asSeconds();
        currentAnimation = &walkDownAnimation;
    } else if (input.isKeyPressed(sf::Keyboard::A)) {
        position.x -= 100 * deltaTime.asSeconds();
        currentAnimation = &walkLeftAnimation;
    } else if (input.isKeyPressed(sf::Keyboard::D)) {
        position.x += 100 * deltaTime.asSeconds();
        currentAnimation = &walkRightAnimation;
    } else {
        currentAnimation = &idleAnimation;
    }

    sprite.setPosition(position);
}
